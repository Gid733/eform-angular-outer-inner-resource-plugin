// <auto-generated />
using System;
using MachineArea.Pn.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MachineArea.Pn.Migrations
{
    [DbContext(typeof(MachineAreaPnDbContext))]
    [Migration("20190110124845_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            string autoIDGenStrategy = "SqlServer:ValueGenerationStrategy";
            object autoIDGenStrategyValue = SqlServerValueGenerationStrategy.IdentityColumn;
            if (DbConfig.IsMySQL)
            {
                autoIDGenStrategy = "MySql:ValueGenerationStrategy";
                autoIDGenStrategyValue = MySqlValueGenerationStrategy.IdentityColumn;
            }
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation(autoIDGenStrategy, autoIDGenStrategyValue);

            modelBuilder.Entity("MachineArea.Pn.Infrastructure.Data.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                .HasAnnotation(autoIDGenStrategy, autoIDGenStrategyValue);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedByUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int>("UpdatedByUserId");

                    b.Property<string>("WorkflowState")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("Name");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("MachineArea.Pn.Infrastructure.Data.Entities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                .HasAnnotation(autoIDGenStrategy, autoIDGenStrategyValue);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedByUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int>("UpdatedByUserId");

                    b.Property<string>("WorkflowState")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("Name");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("MachineArea.Pn.Infrastructure.Data.Entities.MachineArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                .HasAnnotation(autoIDGenStrategy, autoIDGenStrategyValue);

                    b.Property<int>("AreaId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedByUserId");

                    b.Property<int>("MachineId");

                    b.Property<int>("MicrotingeFormSdkId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int>("UpdatedByUserId");

                    b.Property<string>("WorkflowState")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineAreas");
                });

            modelBuilder.Entity("MachineArea.Pn.Infrastructure.Data.Entities.MachineAreaSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                .HasAnnotation(autoIDGenStrategy, autoIDGenStrategyValue);

                    b.Property<int?>("RelatedEntityGroupId");

                    b.HasKey("Id");

                    b.ToTable("MachineAreaSetting");
                });

            modelBuilder.Entity("MachineArea.Pn.Infrastructure.Data.Entities.MachineArea", b =>
                {
                    b.HasOne("MachineArea.Pn.Infrastructure.Data.Entities.Area", "Area")
                        .WithMany("MachineAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MachineArea.Pn.Infrastructure.Data.Entities.Machine", "Machine")
                        .WithMany("MachineAreas")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
